@model BlogApp.Models.BlogPost
@using BlogApp.Services.Interfaces
@using BlogApp.Services


@inject IImageService _ImageService;
@{
    ViewData["Title"] = "Edit";
    Layout = null;
}

<link rel="stylesheet" type="text/css" href="~/ckeditor5-35/sample/styles.css">"


<h1>Edit</h1>

<h4>BlogPost</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Id" />
            <input type="hidden" asp-for="Created" />
            <input type="hidden" asp-for="Slug" />
            <input type="hidden" asp-for="Created" />
            <input type="hidden" asp-for="ImageData" />
            <input type="hidden" asp-for="ImageType" />

            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Content" class="control-label"></label>
                <input asp-for="Content" class="form-control" />
                <span asp-validation-for="Content" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Created" class="control-label"></label>
                <input asp-for="Created" class="form-control" />
                <span asp-validation-for="Created" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastUpdated" class="control-label"></label>
                <input asp-for="LastUpdated" class="form-control" />
                <span asp-validation-for="LastUpdated" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Abstract" class="control-label"></label>
                <input asp-for="Abstract" class="form-control" />
                <span asp-validation-for="Abstract" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsDeleted" /> @Html.DisplayNameFor(model => model.IsDeleted)
                </label>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsPublished" /> @Html.DisplayNameFor(model => model.IsPublished)
                </label>
            </div>

            <div>
                <label asp-for="BlogPostImage" class="form-label"></label>
                <input asp-for="BlogPostImage" class="form-control" accept=".png,.jpg,.jpeg,.gif"
                       onchange="document.getElementById('imageData').src = window.URL.createObjectURL(this.files[0])" />
                <span asp-validation-for="BlogPostImage" class="text-danger"></span>
            </div>



            <div>
                <label asp-for="Tags" class="control-label">Tags</label>
                @*ViewBag is built into ASP*@
                <select name="selectedTags" class="form-select" asp-items="ViewBag.BlogPostTags" multiple aria-label="multiple select example">
                </select>
            </div>



            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }


    <script src="~/ckeditor5-35/build/ckeditor.js"></script>

    <script>
        ClassicEditor
            .create(document.querySelector('.editor'), {
                licenseKey: '',

            })
            .then(editor => {
                window.editor = editor;


            })
            .catch(error => {
                console.error('Oops, something went wrong!');
                console.error('Please, report the following error on https://github.com/ckeditor/ckeditor5/issues with the build id and the error stack trace:');
                console.warn('Build id: xx09iayzufkn-lkt434h3lx2z');
                console.error(error);
            });
    </script>
    }
