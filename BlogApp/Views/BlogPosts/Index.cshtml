@model IEnumerable<BlogApp.Models.BlogPost>
@using BlogApp.Enums
@using BlogApp.Services
@using BlogApp.Services.Interfaces

@inject IImageService ImageService

@{
    ViewData["Title"] = "Index";

}
<div class="container">
    <h1>Index</h1>

    <p>
        <a asp-action="Create">Create New</a>
    </p>

    <div class="row">
        @foreach (var item in Model)
        {
            <div class="card col-3">
                <img src="@ImageService.ConvertByteArrayToFile(item.ImageData!, item.ImageType!,(int)DefaultImage.BlogPost)" alt="@Html.DisplayFor(modelItem => item.Title) Blog Post Image">
                <div class="card-body">

                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.Title)</h5>
                    <p class="card-text">
                        @Html.DisplayFor(modelItem => item.Abstract)
                    </p>
                </div>
                <ul class="list-group list-group-flush">
                    <a asp-action="Details" asp-route-slug="@item.Slug">View Article</a> |
                    <li class="list-group-item">
                        @Html.DisplayFor(modelItem => item.Category!.Name)
                    </li>
                    <li class="list-group-item">
                        @Html.DisplayFor(modelItem => item.Created)
                    </li>
                    <li class="list-group-item">
                        Deleted: @item.IsDeleted
                    </li>
                    <li class="list-group-item">
                        Published: @item.IsPublished
                    </li>
                    <li class="list-group-item">
                        <a asp-action="Edit" asp-route-id="@item.Id"><i class="fa-solid fa-pen"></i></a>
                        <a asp-action="Delete" asp-route-id="@item.Id"><i class="fa-solid fa-trash"></i></a>
                    </li>
            </div>
        }
    </div>

</div>
</div>
